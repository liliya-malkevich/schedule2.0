@using schedule;
@model ViewModelUpdate

@{  
    ViewData["Title"] = "Update";  
}  
<h2>Edit</h2>  
<h4>Schedule</h4>  
<hr/> 

           
               

                    
               @*@Html.TextBoxFor(m=>m.sch.IdSchedule)
               @Html.TextBoxFor(m=>m.sch.numCourse)
*@


<form   asp-controller="ScheduleUpdate" asp-action="Update" method="get">
<select data-val="true" id="IdCourse" name="IdCourse" onchange="this.form.submit();">
                 <option selected>Курс</option>
                @foreach(Course item in Model.Course)
                {
                <option value="@item.IdCourse">
                 
                    @Html.DisplayFor(modelItem => item.numCourse)
                   
                </option>
                }
                </select>

</form>
            <div>
            <form   asp-controller="ScheduleUpdate" asp-action="Update" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="sch.IdSchedule" value="@Model.sch.IdSchedule"/>
                @*<input type="hidden" asp-for="nameLesson" />*@
                @*<input type="hidden" asp-for="TName" />*@

                
                <div asp-validation-summary="All"></div>

                

                <select data-val="true" id="IdGroup" name="IdGroup">
                 <option selected>№ группы</option>
                @foreach(Group item in Model.Group)
                {
                if (Model.sch.numGroup != null && item.numGroup.Contains(Model.sch.numGroup) && item.IdCourse == Model.sch.numCourse)
                {
                    <option selected value="@item.IdGroup">@Model.sch.numGroup г+@Model.sch.numCourse k @item.IdCourse</option>
                    continue;
                }
                <option value="@item.IdGroup">
                    @Html.DisplayFor(modelItem => item.numGroup)g+@Html.DisplayFor(i=>item.IdCourse)k
                    </option>
                }
                </select>

                 <select data-val="true" id="IdFormat" name="IdFormat">
                 <option selected>Формат</option>
                @foreach(Format item in Model.Format)
                {
                     if (Model.sch.FormatName!=null && item.FormatName.Contains(Model.sch.FormatName)){
                          <option selected value="@item.IdFormat">@Model.sch.FormatName</option>
                    continue;
                }
                    <option value="@item.IdFormat">
                    @Html.DisplayFor(modelItem => item.FormatName)
                    </option>
                }
                </select>

                
                <select data-val="true" id="IdLectureHall" name="IdLectureHall">
                 <option selected>№ аудитории</option>
                @foreach(LectureHall item in Model.LectureHall)
                {
                    if (Model.sch.LectureHallNum!=null && item.LectureHallName.Contains(Model.sch.LectureHallNum)){
                          <option selected value="@item.IdLectureHall">@Model.sch.LectureHallNum</option>
                    continue;
                }
                    <option value="@item.IdLectureHall">
                    @Html.DisplayFor(modelItem => item.LectureHallName)
                    </option>
                }
                </select>

                 <select data-val="true" id="IdNote" name="IdNote">
                 <option selected>Заметка</option>
                @foreach(Note item in Model.Note)
                {
                    if (Model.sch.NoteName!=null && item.NoteName.Contains(Model.sch.NoteName)){
                          <option selected value="@item.IdNote">@Model.sch.NoteName</option>
                    continue;
                }
                    <option value="@item.IdNote">
                    @Html.DisplayFor(modelItem => item.NoteName)
                    </option>
                }
                </select>

                <select data-val="true" id="IdSubject" name="IdSubject">
                 <option selected>Дисциплина</option>
                @foreach(Subject item in Model.Subject)
                {
                    if (Model.sch.SubjectName!=null && item.SubjectName.Contains(Model.sch.SubjectName)){
                          <option selected value="@item.IdSubject">@Model.sch.SubjectName</option>
                    continue;
                }
                    <option value="@item.IdSubject">
                    @Html.DisplayFor(modelItem => item.SubjectName)
                    </option>
                }
                </select>

                <select data-val="true" id="IdTeacher" name="IdTeacher">
                 <option selected>Преподаватель</option>
                @foreach(Teacher item in Model.Teacher)
                {
                     if (Model.sch.TeacherName!=null && item.TeacherName.Contains(Model.sch.TeacherName)){
                          <option selected value="@item.IdTeacher">@Model.sch.TeacherName</option>
                    continue;
                }
                    <option value="@item.IdTeacher">
                    @Html.DisplayFor(modelItem => item.TeacherName)
                    </option>
                }
                </select>

                 <select data-val="true" id="IdTimeLesson" name="IdTimeLesson">
                 <option selected>№ занятия</option>
                @foreach(TimeLessons item in Model.TimeLessons)
                {
                    if (Model.sch.numTimeLesson!=0 && item.numTimeLesson == (Model.sch.numTimeLesson)){
                          <option selected value="@item.IdTimeLesson">@Model.sch.numTimeLesson</option>
                    continue;
                }

                    <option value="@item.IdTimeLesson">
                    @Html.DisplayFor(modelItem => item.numTimeLesson)
                    </option>
                }
                </select>

                 <select data-val="true" id="IdWeekday" name="IdWeekday">
                 <option selected>День недели</option>
                 
                @foreach(Weekday item in Model.Weekday)
                {
                     if (Model.sch.WeekdayName!=null && item.WeekdayName.Contains(Model.sch.WeekdayName)){
                          <option selected value="@item.IdWeekday">@Model.sch.WeekdayName</option>
                    continue;
                }
               
                    <option value="@item.IdWeekday">
                    @Html.DisplayFor(modelItem => item.WeekdayName)
                    </option>

               
                }
               
                @* <option selected value="">@Model.sch.WeekdayName</option>*@
                <span asp-validation-for="sch.IdWeekday"></span>
                </select>
               
                <input type="hidden" id="id" name="id" value="@Model.sch.IdSchedule"/>
                <input type="submit" value="Сохранить" />
            </form>
        </div>
               
            